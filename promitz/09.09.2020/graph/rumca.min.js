var RumcaJS=function(s,a){function i(s,a,i){var t=s[a];s[a]=s[i],s[i]=t}function t(){var s=a.find(".chart__label-y"),i=a.find(".bar__container"),t=i.length,e={axisY:[],bars:[]};if(t&&s.length===t){for(var n=0;t>n;n++){var r=$(s[n]).text(),h=$(i[n]).data("value");e.barsLength=t,e.axisY.push(r),e.bars.push(h)}return e}return 0}function e(s,a,i){var t=$(window),e=function(s,a){var e=t.scrollTop(),n=t.scrollTop()+t.height()-a;s.each(function(){var s=$(this),a=s.offset().top,t=a+s.height(),r=a>=e&&n>=a,h=e>=a&&t>=n,o=t>=e&&n>=t,l=r||o||h;i?s.toggleClass("visible",l):s.addClass("visible",l)})};e(s,a),t.scroll(function(){e(s,a)})}this.elem=$(a),this.selector=a.selector,this.options=s,this.init=function(s){var a='<div class="chart--top"><div class="chart__axis-y"></div><div class="chart__box chart--horizontal"> <div class="chart__bars"></div></div></div><div class="chart__axis-x"></div>';this.elem.addClass("chart__container"),this.elem.html(a),this.appendAll(s.data),this.selectMax(),this.selectMin(),s.animation?e(this.elem,s.animationOffset,s.animationRepeat):this.elem.addClass("visible"),s.showValues&&this.elem.addClass("show-values"),s.showArrows&&this.elem.addClass("show-arrows"),s.showHorizontalLines&&this.elem.addClass("show-horizontal-lines"),s.labelsAboveBars&&this.elem.addClass("labels-above-bars")},this.prependItem=function(s,a){this.prependAxisY([s]),this.prependBars([a])},this.prependAxisX=function(s){var a=this.elem.find(".chart__axis-x");s.forEach(function(s){var i='<span class="chart__label-x">'+s+"</span>";a.prepend(i)});var i=a.find("span"),t=i.length;i.width(100/t+"%")},this.prependBars=function(s){var a=this.elem.find(".chart__bars");s.forEach(function(s){var i='<div class="bar__container" data-value="'+s+'" style="width:'+s+'"><span class="bar"></span></div>';a.prepend(i)}),this.selectMax($(this)),this.selectMin($(this))},this.prependAxisY=function(s){var a=this.elem.find(".chart__axis-y");s.forEach(function(s){var i='<div class="chart__label-y"><span class="label-y__name">'+s+"</span></div>";a.prepend(i)})},this.prependAll=function(s){this.prependAxisX(s.axisX),this.prependAxisY(s.axisY),this.prependBars(s.bars)},this.appendItem=function(s,a){this.appendAxisY([s]),this.appendBars([a])},this.appendAxisX=function(s){var a=this.elem.find(".chart__axis-x");s.forEach(function(s){var i='<span class="chart__label-x">'+s+"</span>";a.append(i)});var i=a.find("span"),t=i.length;i.width(100/t+"%")},this.appendBars=function(s){var a=this.elem.find(".chart__bars");s.forEach(function(s){var i='<div class="bar__container" data-value="'+s+'" style="width:'+s+'%"><span class="bar"></span></div>';a.append(i)}),this.selectMax(),this.selectMin()},this.appendAxisY=function(s){var a=this.elem.find(".chart__axis-y");s.forEach(function(s){var i='<div class="chart__label-y"><span class="label-y__name">'+s+"</span></div>";a.append(i)})},this.appendAll=function(s){this.appendAxisX(s.axisX),this.appendAxisY(s.axisY),this.appendBars(s.bars)},this.resetBars=function(){this.elem.find(".chart__bars").empty()},this.resetAxisX=function(){this.elem.find(".chart__axis-x").empty()},this.resetAxisY=function(){this.elem.find(".chart__axis-y").empty()},this.resetAll=function(){this.resetAxisX(),this.resetAxisY(),this.resetBars()},this.updateBars=function(s){this.resetBars(),this.appendBars(s)},this.updateAxisX=function(s){this.resetAxisX(),this.appendAxisX(s)},this.updateAxisY=function(s){this.resetAxisY(),this.appendAxisY(s)},this.updateAll=function(s){this.resetAll(),this.appendBars(s.bars),this.appendAxisX(s.axisX),this.appendAxisY(s.axisY)},this.removeItem=function(s){var a=$charbox.find(".chart__label-y"),i=$charbox.find(".bar__container");i[s-1].remove(),a[s-1].remove()},this.sortByName=function(s){var a=t();if(a.barsLength){for(var e=a.barsLength;e>1;--e)for(var n=0;e-1>n;++n)a.axisY[n]>a.axisY[n+1]&&(i(a.bars,n,n+1),i(a.axisY,n,n+1));this.addSortedData(a,s)}else console.error("Number of bars is not equals number of axis Y labels.")},this.sortByValue=function(s){var a=t();if(a.barsLength){for(var e=a.barsLength;e>1;--e)for(var n=0;e-1>n;++n)a.bars[n]>a.bars[n+1]&&(i(a.bars,n,n+1),i(a.axisY,n,n+1));this.addSortedData(a,s,this)}else console.error("Number of bars is not equals number of axis Y labels.")},this.addSortedData=function(s,a){a&&(s.bars.reverse(),s.axisY.reverse()),this.resetBars(),this.appendBars(s.bars),this.resetAxisY(),this.appendAxisY(s.axisY)},this.selectMax=function(){var s=this.elem.find(".bar__container");s.removeClass("max");var a=s.map(function(){return $(this).data("value")}).get(),i=Math.max.apply(Math,a),t=s.filter('[data-value="'+i+'"]');t.addClass("max")},this.selectMin=function(){var s=this.elem.find(".bar__container");s.removeClass("min");var a=s.map(function(){return $(this).data("value")}).get(),i=Math.min.apply(Math,a),t=s.filter('[data-value="'+i+'"]');t.addClass("min")},this.runAnimation=function(){this.elem.removeClass("visible"),setTimeout(function(){this.elem.addClass("visible")},250)},this.init(this.options)};!function(s){var a={data:{},animation:!0,animationOffset:0,animationRepeat:!0,showValues:!0,showArrows:!1,showHorizontalLines:!1,labelsAboveBars:!1};s.fn.rumcaJS=function(i){if("object"==typeof i||!i){var t=s.extend({},a,i),e=new RumcaJS(t,this);return e}s.error("Method or option "+i+" does not exist on RumcaJS")}}(jQuery);